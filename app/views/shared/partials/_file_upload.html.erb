<!--
    file_upload(form: form, field: :logo)
    -> form makes it possible to generate field
    -> it also allow use to recover our model with `form.object`
    -> :logo is the field name
-->

<div class="file-upload">

  <!-- Thumbnail -->
  <div class="row">
    <%= form.label field do %>
    <%= image_tag form.object.decorate.image_url(field, :thumb, :fallback => true), :id =>
    "#{field}_#{form.object.id}" %>
    <% end %>
  </div>

  <!-- Invisible browsing input -->
  <div class="row">
    <div class="file-upload__browser">
      <%= form.file_field field, :accept => "image/png, image/jpeg, image/jpg", :image_selector => "##{field}_#{form.object.id}", :class => 'js-file-upload' %>
    </div>
  </div>

  <!-- Actions -->
  <div class="row">
    <div class="file-upload__action">

      <%= link_to '', '#', :class => 'tooltipster fa fa-check buttons buttons__add hidden', :id => "#{field}_#{form.object.id}_add", :title => "Update changes", :data => {:form => 'submit'} %>

      <% if form.object.persisted? %>
        <% if form.object.send(field).present? %>
          <% if form.object === Image %>
            <%= link_to '', guess_destroy_image_path(form, field), :method => :delete, :class => 'tooltipster fa fa-times buttons buttons__delete', :title => "Delete this image" %>
          <% end %>
        <% end %>
      <% end %>

    </div>
  </div>

</div>
