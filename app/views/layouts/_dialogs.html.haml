#login-dialog.mfp-with-anim.mfp-hide.mfp-dialog.clearfix.open-popup-link
  %i.fa.fa-sign-in.dialog-icon
  - if session[:login_advice_counter] and flash[:error].present?
    %h5{ :style => 'color:red' }= flash[:error]
  - elsif session[:login_advice_counter] and flash[:info].present?
    %h5{ :style => 'color:blue' }= flash[:info]
  - else
    %h3= I18n.t(:header, scope: :sign_in_dialog)
    %h5= I18n.t(:title, scope: :sign_in_dialog)
  = form_tag user_session_path, :method => :post, :class => 'dialog-form', 'data-toggle': 'validator'  do
    .form-group
      %label= I18n.t(:email, scope: :sign_in_dialog)
      = email_field_tag 'user[email]',  nil, :class => 'form-control', :placeholder => 'email@domain.com', :required => true
      %div.help-block.with-errors
    .form-group
      %label= I18n.t(:password, scope: :sign_in_dialog)
      = password_field_tag 'user[password]', nil, :class => 'form-control', :placeholder => I18n.t(:password, scope: :sign_up_dialog), :required => true
    - if session[:login_advice_counter].present? and session[:login_advice_counter] >= Rails.configuration.login_failure_limit
      .form-inline
        .form-group
          = text_field_tag :captcha, '', :autocomplete => :off,  placeholder: I18n.t(:captcha, scope: :sign_up_dialog), :required => true, :minLength => 4, :maxLength => 4, :class => 'form-control'
        .form-group
          = captcha_tag
    .checkbox
      %label
        %input{:type => 'checkbox', :checked => 'checked'}
        = I18n.t(:remember_me, scope: :sign_in_dialog)
    
    %div{class: "col-md-12"}
      %div{class:"col-md-5"}
        = submit_tag I18n.t(:sign_in, scope: :sign_in_dialog), :class => 'btn btn-primary'

      %div{class:"col-md-7"}
        %a.popup-text{'data-effect' => 'mfp-zoom-out', :href => '#register-dialog', :class => 'btn btn-primary'}= I18n.t(:not_member_yet, scope: :sign_in_dialog)
        %a.popup-text{'data-effect' => 'mfp-zoom-out', class: 'simple-text', :href => '#password-recover-dialog'}= I18n.t(:forgot_password, scope: :sign_in_dialog)

#register-dialog.mfp-with-anim.mfp-hide.mfp-dialog.clearfix
  %i.fa.fa-edit.dialog-icon
  - if session[:signup_advice_counter] and flash[:error].present?
    %h5{ :style => 'color:red' }= flash[:error]
  - elsif session[:signup_advice_counter] and flash[:info].present?
    %h5{ :style => 'color:blue' }= flash[:info]
  - else
    - for_device_type :desktop do
      %h3= I18n.t(:header, scope: :sign_up_dialog)
      %h5= I18n.t(:title, scope: :sign_up_dialog)
    - for_device_type :mobile, :tablet do
      %h4= I18n.t(:header, scope: :sign_up_dialog)
  = form_tag user_registration_path, :method => :post, :class => 'dialog-form', 'data-toggle': 'validator' do
    - for_device_type :desktop do
      .form-group
        = text_field_tag 'user[username]', nil, :class => 'form-control', :placeholder => I18n.t(:username, scope: :sign_up_dialog), :required => true
      .form-group
        = email_field_tag 'user[email]', nil, :class => 'form-control', :placeholder => I18n.t(:email, scope: :sign_up_dialog), :required => true
      .form-group
        = password_field_tag 'user[password]', nil, :class => 'form-control', :placeholder => I18n.t(:password, scope: :sign_up_dialog), :required => true, :minLength => Rails.configuration.min_password_length
        %div.help-block.with-errors
      .form-group
        = password_field_tag 'user[password_confirmation]', nil, :class => 'form-control', :placeholder => I18n.t(:password_confirmation, scope: :sign_up_dialog), 'data-match' => '#user_password'
        %div.help-block.with-errors
      .form-inline
        .form-group
          = text_field_tag 'user[birth]', nil, :class => 'form-control date-picker', placeholder: I18n.t(:birthday, scope: :edit_personal), 'data-provide': 'datepicker', 'data-date-format': 'yyyy-mm-dd', :required => true
        .form-group.col-md-offset-1
          %label.radio-inline
            = radio_button_tag 'user[gender]', 'm'
            = I18n.t(:'genderize.name.masculine')
          %label.radio-inline
            = radio_button_tag 'user[gender]', 'f', :checked => true
            = I18n.t(:'genderize.name.feminine')
      .form-inline
        .form-group
          = text_field_tag :captcha, nil, :autocomplete => :off, placeholder: I18n.t(:captcha, scope: :sign_up_dialog), :class => 'form-control', :style => 'margin-right:14px', :required => true, :minLength => 4, :maxLength => 4
        .form-group
          = captcha_tag
      = submit_tag I18n.t(:sign_up, scope: :sign_up_dialog), :class => 'btn btn-primary'
    - for_device_type :mobile, :tablet do
      = text_field_tag 'user[username]', nil, :class => 'form-control', :placeholder => I18n.t(:username, scope: :sign_up_dialog), :required => true
      = email_field_tag 'user[email]', nil, :class => 'form-control', :placeholder => I18n.t(:email, scope: :sign_up_dialog), :required => true
      = password_field_tag 'user[password]', nil, :class => 'form-control', :placeholder => I18n.t(:password, scope: :sign_up_dialog), :required => true, :minLength => 8
      %div.help-block.with-errors
      = password_field_tag 'user[password_confirmation]', nil, :class => 'form-control', :placeholder => I18n.t(:password_confirmation, scope: :sign_up_dialog), 'data-match' => '#user_password'
      %div.help-block.with-errors
      .input-group
        = text_field_tag 'user[birth]', nil, :class => 'form-control date-picker', placeholder: I18n.t(:birthday, scope: :edit_personal), 'data-provide': 'datepicker', 'data-date-format': 'yyyy-mm-dd', :style => 'width:120px;margin-right:8px'
        %label.radio-inline
          = radio_button_tag 'user[gender]', 'm'
          = I18n.t(:'genderize.name.masculine')
        %label.radio-inline
          = radio_button_tag 'user[gender]', 'f', :checked => true
          = I18n.t(:'genderize.name.feminine')
      .input-group
        = captcha_tag
        = text_field_tag :captcha, '', :autocomplete => :off, :placeholder => I18n.t(:captcha, scope: :sign_up_dialog), :class => 'form-control', :required => true, :minLength => 4, :maxLength => 4
      = submit_tag I18n.t(:sign_up, scope: :sign_up_dialog), :class => 'btn btn-primary'
  %ul.dialog-alt-links
    %li
      %a.popup-text{'data-effect' => 'mfp-zoom-out', class: "simple-text", :href => '#login-dialog'}= I18n.t(:already_member, scope: :sign_up_dialog)
#password-recover-dialog.mfp-with-anim.mfp-hide.mfp-dialog.clearfix
  %i.icon-retweet.dialog-icon
  %h3= I18n.t(:header, scope: :password_recovery_dialog)
  %h5= I18n.t(:title, scope: :password_recovery_dialog)
  %form.dialog-form{'data-toggle': 'validator'}
    %label.control-label= I18n.t(:email, scope: :password_recovery_dialog)
    %input.form-control.span12{:placeholder => 'email@domain.com', :type => 'email', :required => true}
    %input.btn.btn-primary{:type => 'submit', :value => I18n.t(:ok, scope: :password_recovery_dialog)}
